// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE

import * as Css from "bs-css/src/Css.js";
import * as Icon from "./Icon.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as ReactDOMRe from "reason-react/src/ReactDOMRe.js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";

var component = ReasonReact.statelessComponent("Button");

function getBackgroundColor(bsStyle) {
  if (bsStyle >= 465819841) {
    if (bsStyle >= 944645571) {
      if (bsStyle >= 1039223728) {
        return Css.white;
      } else {
        return Css.green;
      }
    } else if (bsStyle >= 512905955) {
      return Css.red;
    } else {
      return Css.gray;
    }
  } else if (bsStyle !== 58474434) {
    if (bsStyle >= 164354652) {
      return Css.yellow;
    } else {
      return Css.white;
    }
  } else {
    return Css.green;
  }
}

function button(disabled, bsStyle) {
  return Css.style(/* :: */[
              Css.position(Css.relative),
              /* :: */[
                Css.display(Css.inlineBlock),
                /* :: */[
                  Css.boxShadow(undefined, Css.px(1), undefined, undefined, true, Css.rgba(255, 255, 255, 0.1)),
                  /* :: */[
                    Css.borderWidth(Css.px(1)),
                    /* :: */[
                      Css.marginBottom(Css.zero),
                      /* :: */[
                        Css.borderColor(Css.green),
                        /* :: */[
                          Css.borderBottomColor(Css.red),
                          /* :: */[
                            Css.backgroundColor(getBackgroundColor(bsStyle)),
                            /* :: */[
                              Css.textAlign(Css.center),
                              /* :: */[
                                Css.verticalAlign(Css.middle),
                                /* :: */[
                                  Css.cursor(disabled ? /* notAllowed */939907157 : /* pointer */-786317123),
                                  /* :: */[
                                    Css.backgroundImage(Css.none),
                                    /* :: */[
                                      Css.borderStyle(Css.solid),
                                      /* :: */[
                                        Css.whiteSpace(Css.nowrap),
                                        /* [] */0
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

var Styles = /* module */[
  /* getBackgroundColor */getBackgroundColor,
  /* button */button
];

function make(onClick, $staropt$star, $staropt$star$1, icon, $staropt$star$2, _children) {
  var disabled = $staropt$star !== undefined ? $staropt$star : false;
  var caret = $staropt$star$1 !== undefined ? $staropt$star$1 : false;
  var bsStyle = $staropt$star$2 !== undefined ? $staropt$star$2 : /* default */465819841;
  var onButtonClick = function ($$event, self) {
    if (onClick !== undefined) {
      Curry._1(onClick, $$event);
    }
    console.log(self);
    return /* () */0;
  };
  var iconEl = function (param) {
    if (icon !== undefined) {
      return ReasonReact.element(undefined, undefined, Icon.make(icon, undefined, undefined, /* array */[]));
    } else {
      return null;
    }
  };
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("button", {
                          className: button(disabled, bsStyle),
                          onClick: Curry._1(self[/* handle */0], onButtonClick)
                        }, iconEl(self), ReactDOMRe.createElementVariadic("span", undefined, _children), caret ? React.createElement("span", {
                                className: "caret"
                              }) : null);
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

export {
  component ,
  Styles ,
  make ,
  
}
/* component Not a pure module */
