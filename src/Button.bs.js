// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE

import * as Curry from "bsb-native/lib/es6/curry.js";
import * as React from "react";
import * as Emotion from "/home/tomis/Documents/Git/reasontest/node_modules/bs-emotion/src/Emotion.bs.js";
import * as ReactDOMRe from "/home/tomis/Documents/Git/reasontest/node_modules/reason-react/src/ReactDOMRe.js";
import * as ReasonReact from "/home/tomis/Documents/Git/reasontest/node_modules/reason-react/src/ReasonReact.js";
import * as Icon$ReactTemplate from "./Icon.bs.js";

var component = ReasonReact.statelessComponent("Button");

function getBackgroundColor(bsStyle) {
  if (bsStyle >= 465819841) {
    if (bsStyle >= 944645571) {
      if (bsStyle >= 1039223728) {
        return /* `hex */[
                5194459,
                "ffffff"
              ];
      } else {
        return /* `hex */[
                5194459,
                "008800"
              ];
      }
    } else if (bsStyle >= 512905955) {
      return /* `hex */[
              5194459,
              "880000"
            ];
    } else {
      return /* `hex */[
              5194459,
              "777777"
            ];
    }
  } else if (bsStyle !== 58474434) {
    if (bsStyle >= 164354652) {
      return /* `hex */[
              5194459,
              "008888"
            ];
    } else {
      return /* `hex */[
              5194459,
              "ffffff"
            ];
    }
  } else {
    return /* `hex */[
            5194459,
            "008800"
          ];
  }
}

function button(disabled, bsStyle) {
  return Emotion.css(undefined, /* :: */[
              Emotion.label("button"),
              /* :: */[
                Emotion.position(/* relative */903134412),
                /* :: */[
                  Emotion.display(/* inlineBlock */-147785676),
                  /* :: */[
                    Emotion.boxShadow(undefined, /* `px */[
                          25096,
                          1
                        ], undefined, undefined, true, Emotion.rgba(255, 255, 255, 0.1)),
                    /* :: */[
                      Emotion.borderWidth(Emotion.px(1)),
                      /* :: */[
                        Emotion.marginBottom(/* zero */-789508312),
                        /* :: */[
                          Emotion.backgroundColor(getBackgroundColor(bsStyle)),
                          /* :: */[
                            Emotion.textAlign(/* center */98248149),
                            /* :: */[
                              Emotion.verticalAlign(/* middle */-866200747),
                              /* :: */[
                                Emotion.cursor(disabled ? /* notAllowed */939907157 : /* pointer */-786317123),
                                /* :: */[
                                  Emotion.backgroundImage(/* none */-922086728),
                                  /* :: */[
                                    Emotion.borderStyle(/* solid */12956715),
                                    /* :: */[
                                      Emotion.whiteSpace(/* nowrap */867913355),
                                      /* [] */0
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

var Styles = /* module */[
  /* getBackgroundColor */getBackgroundColor,
  /* button */button
];

function make(onClick, $staropt$star, $staropt$star$1, icon, $staropt$star$2, _children) {
  var disabled = $staropt$star !== undefined ? $staropt$star : false;
  var caret = $staropt$star$1 !== undefined ? $staropt$star$1 : false;
  var bsStyle = $staropt$star$2 !== undefined ? $staropt$star$2 : /* default */465819841;
  var onButtonClick = function ($$event, self) {
    if (onClick !== undefined) {
      Curry._1(onClick, $$event);
    }
    console.log(self);
    return /* () */0;
  };
  var iconEl = function (param) {
    if (icon !== undefined) {
      return ReasonReact.element(undefined, undefined, Icon$ReactTemplate.make(icon, undefined, undefined, /* array */[]));
    } else {
      return null;
    }
  };
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("button", {
                          className: button(disabled, bsStyle),
                          onClick: Curry._1(self[/* handle */0], onButtonClick)
                        }, iconEl(self), ReactDOMRe.createElementVariadic("span", undefined, _children), caret ? React.createElement("span", {
                                className: "caret"
                              }) : null);
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

export {
  component ,
  Styles ,
  make ,
  
}
/* component Not a pure module */
